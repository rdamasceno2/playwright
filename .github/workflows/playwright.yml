name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Run each test file in parallel
        testFile:
          - 'tests/login.spec.js'
          - 'tests/ClientAppPO.spec.js'
          - 'tests/webApp2.spec.js'
          - 'tests/example.spec.js'
          - 'tests/llc.spec.js'
          - 'tests/download.spec.js'
          - 'tests/client.spec.js'
          - 'tests/webApp1.spec.ts'
          - 'tests/NetworkTest.spec.js'
          - 'tests/search-garfield.spec.ts'
          - 'tests/ClientAppPO.spec.ts'
          - 'tests/MoreValidation.spec.js'
          - 'tests/calender.spec.js'

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Run Playwright tests
      run: npx playwright test ${{ matrix.testFile }}
      env:
        CI: true
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ matrix.testFile == 'tests/login.spec.js' && 'login' || matrix.testFile == 'tests/ClientAppPO.spec.js' && 'clientapp' || matrix.testFile == 'tests/webApp2.spec.js' && 'webapp2' || matrix.testFile == 'tests/example.spec.js' && 'example' || matrix.testFile == 'tests/llc.spec.js' && 'llc' || matrix.testFile == 'tests/download.spec.js' && 'download' || matrix.testFile == 'tests/client.spec.js' && 'client' || matrix.testFile == 'tests/webApp1.spec.ts' && 'webapp1' || matrix.testFile == 'tests/NetworkTest.spec.js' && 'network' || matrix.testFile == 'tests/search-garfield.spec.ts' && 'search' || matrix.testFile == 'tests/ClientAppPO.spec.ts' && 'clientapp-ts' || matrix.testFile == 'tests/MoreValidation.spec.js' && 'validation' || 'calendar' }}
        path: |
          playwright-report/
          test-results/
        retention-days: 30
        
    - name: Generate Allure Report
      if: always()
      run: |
        npm install -g allure-commandline
        allure generate allure-results -o allure-report --clean

    - name: Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report-${{ matrix.testFile == 'tests/login.spec.js' && 'login' || matrix.testFile == 'tests/ClientAppPO.spec.js' && 'clientapp' || matrix.testFile == 'tests/webApp2.spec.js' && 'webapp2' || matrix.testFile == 'tests/example.spec.js' && 'example' || matrix.testFile == 'tests/llc.spec.js' && 'llc' || matrix.testFile == 'tests/download.spec.js' && 'download' || matrix.testFile == 'tests/client.spec.js' && 'client' || matrix.testFile == 'tests/webApp1.spec.ts' && 'webapp1' || matrix.testFile == 'tests/NetworkTest.spec.js' && 'network' || matrix.testFile == 'tests/search-garfield.spec.ts' && 'search' || matrix.testFile == 'tests/ClientAppPO.spec.ts' && 'clientapp-ts' || matrix.testFile == 'tests/MoreValidation.spec.js' && 'validation' || 'calendar' }}
        path: allure-report/
        retention-days: 30

  deploy-report:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts
          
      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.RAFA_GITHUB_TOKEN }}
          publish_dir: all-artifacts/allure-report-login  # Using login report as main
